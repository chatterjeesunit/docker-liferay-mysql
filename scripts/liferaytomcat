#!/bin/bash
#
# description: Apache Tomcat init script
# processname: tomcat  
# chkconfig: 234 20 80  
#
#
# Copyright (C) 2014 Miglen Evlogiev
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Initially forked from: gist.github.com/valotas/1000094
# Source: gist.github.com/miglen/5590986

export LIFERAY_HOME=/home/user/Tools/liferay-ce-portal-7.0-ga5
export JPDA_TRANSPORT="dt_socket"
export JPDA_ADDRESS="8000"
export JPDA_SUSPEND="n"
export JPDA_OPTS="-agentlib:jdwp=transport=$JPDA_TRANSPORT,address=$JPDA_ADDRESS,server=y,suspend=$JPDA_SUSPEND"

#Location of JAVA_HOME (bin files)
export JAVA_HOME=/home/user/Tools/jdk1.8.0_171
 
#Add Java binary files to PATH
#export PATH=$JAVA_HOME/bin:$PATH
 
#CATALINA_HOME is the location of the bin files of Tomcat  
export CATALINA_HOME=$LIFERAY_HOME/tomcat-8.0.32
 
#CATALINA_BASE is the location of the configuration files of this instance of Tomcat
export CATALINA_BASE=$LIFERAY_HOME/tomcat-8.0.32
 
#TOMCAT_USER is the default user of tomcat
export TOMCAT_USER=user
 
#TOMCAT_USAGE is the message if this script is called without any options
TOMCAT_USAGE="Usage: $0 {\e[00;32mstart\e[00m|\e[00;31mstop\e[00m|\e[00;31mkill\e[00m|\e[00;32mstatus\e[00m|\e[00;31mrestart\e[00m}"
 
#SHUTDOWN_WAIT is wait time in seconds for java proccess to stop
SHUTDOWN_WAIT=30
 
tomcat_pid() {
         echo `ps -fe | grep "org.apache.catalina.startup.Bootstrap start" | grep -v grep | tr -s " "|cut -d" " -f2`
#        echo `ps -fe | grep $CATALINA_BASE | grep -v grep | tr -s " "|cut -d" " -f2`
}
 
start() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo -e "\e[00;31mLiferay is already running (pid: $pid)\e[00m"
  else
    # Start tomcat
    echo -e "\e[00;32mStarting Liferay\e[00m"
	echo -e "\e[00;32mCheck if mysql is started, and if not then start it\e[00m"
	until [ 0 = `sudo service mysql status | grep -cF 'MySQL is stopped'` ]
	do
	   echo -e "\e[00;31mwaiting for mysql to start\e[00m"
	   sudo service mysql start   
	   sudo service mysql status
	done
    sh $CATALINA_HOME/bin/catalina.sh jpda run
    status
  fi
  return 0
}
 
status(){
          pid=$(tomcat_pid)
          if [ -n "$pid" ]
            then echo -e "\e[00;32mLiferay is running with pid: $pid\e[00m"
          else
            echo -e "\e[00;31mLiferay is not running\e[00m"
            return 3
          fi
}

terminate() {
	echo -e "\n\e[00;31mTerminating Liferay\e[00m"
	kill -9 $(tomcat_pid)
}

stop() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo -e "\e[00;31mStopping Tomcat\e[00m"
    sh $CATALINA_HOME/bin/shutdown.sh
 
    if [ -e $LIFERAY_HOME/tomcat-8.0.32/logs/catalina.out ]
    then
	  echo -e "\e[00;32mCheck and wait for tomcat shutdown\e[00m"
      count=0
	  res=0
	  until [ 1 = $res ]||[ $count -gt $SHUTDOWN_WAIT ]
	  do
		   echo -e "\e[00;31mwaiting for shutdown to complete\e[00m"
		   res=$(grep -cF 'org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["ajp-nio-8009"]' $LIFERAY_HOME/tomcat-8.0.32/logs/catalina.out)
		   sleep 1
		   let count=$count+1;
	  done
      if [ $count -gt $SHUTDOWN_WAIT ]
	  then
     	  echo -e "\e[00;32mShutdown now complete\e[00m"
	      echo -e "\e[00;32mRemoving Old Log files\e[00m"
     	  rm -rf $LIFERAY_HOME/tomcat-8.0.32/logs
	      mkdir -p $LIFERAY_HOME/tomcat-8.0.32/logs
      fi
	fi
 

    pid=$(tomcat_pid)
    if [ -n "$pid" ]; then
      echo -e "\n\e[00;31mLiferay did not shutdown gracefully.\e[00m"
      terminate
    fi
  else
    echo -e "\e[00;31mLiferay is not running\e[00m"
  fi
 
  return 0
}
 
user_exists(){
        if id -u $1 >/dev/null 2>&1; then
        echo "1"
        else
                echo "0"
        fi
}
 
case $1 in
	start)
	  start
	;;
	stop)  
	  stop
	;;
	restart)
	  stop
	  start
	;;
	status)
		status
		exit $?  
	;;
	kill)
		terminate
	;;		
	*)
		echo -e $TOMCAT_USAGE
	;;
esac    
exit 0

